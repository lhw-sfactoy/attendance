<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://mybatis.org/schema/mybatis-spring
                        http://mybatis.org/schema/mybatis-spring.xsd">
    <!-- properties를 사용하기 위해 선언 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>/WEB-INF/config/properties/data/db.properties</value>
        </property>
    </bean>                     
    <!-- org.springframework.jdbc.datasource.DriverManagerDataSource : DB 연결을 요청할 때 마다 새로운 객체를 생성. 멀티스레드 사용 가능. -->
    <!-- org.springframework.jdbc.datasource.SingleConnectionDataSource : 오직 하나의 DB에 연결 객체를 생성해 두고 요청할때 그 객체 전달. 멀티스레드 사용 불가. (둘 이상의 스레드가 하나의 자원에 접근 하므로 Thread safe 하지 않음) -->
    <!-- 데이터 소스 : 커넥션 풀링이 지원 안됨 => 대안 DBCP -->   
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${mysql.driver}" />
        <property name="url" value="${mysql.url}" />
        <property name="username" value="${mysql.username}" />
        <property name="password" value="${mysql.password}" />
    </bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="${configLocation}" />
        <!-- mapper를 독립적으로 선언한 경우, 선언된 mapper와 xml mapper file이 다른 경로에 있는게 아니라면 mapper location을 지정할 필요가 없음 -->
        <property name="mapperLocations" value="classpath:data/*.xml" />
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    <!-- mapper를 독립적으로 선언 할 경우 -->
<!--     <mybatis:scan base-package="data" /> -->
<!--     <bean id="boardMapper" class="org.mybatis.spring.mapper.MapperFactoryBean"> -->
<!--         <property name="mapperInterface" value="data.BoardMapper" /> -->
<!--         <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
<!--     </bean> -->
    <!-- mapper를 한꺼번에 선언 할 경우 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- mapper가 있는 패키지를 적으면 된다. -->
        <property name="basePackage" value="data" />
    </bean>
    <!-- service 선언(또는 Dao) @Autowired를 사용한다면 property 필요 x -->
    <bean id="attendanceService" class="service.AttendanceService">
<!--         <property name="boardMapper" ref="boardMapper" /> -->
    </bean>
</beans>